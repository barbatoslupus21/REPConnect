# Generated by Django 5.0.3 on 2025-09-08 03:55

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(help_text='Description of the evaluation')),
                ('start_year', models.IntegerField(default=2025, help_text='Fiscal year start (e.g., 2025 for FY2025-26)')),
                ('end_year', models.IntegerField(default=2026, help_text='Fiscal year end (e.g., 2026 for FY2025-26)')),
                ('duration', models.CharField(choices=[('daily', 'Daily'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_evaluations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('supervisor_review', 'Supervisor Review'), ('manager_review', 'Manager Review'), ('approved', 'Approved'), ('disapproved', 'Disapproved')], default='pending', max_length=20)),
                ('self_completed_at', models.DateTimeField(blank=True, null=True)),
                ('supervisor_completed_at', models.DateTimeField(blank=True, null=True)),
                ('strengths', models.TextField(blank=True)),
                ('weaknesses', models.TextField(blank=True)),
                ('training_required', models.TextField(blank=True)),
                ('supervisor_comments', models.TextField(blank=True)),
                ('employee_comments', models.TextField(blank=True)),
                ('manager_completed_at', models.DateTimeField(blank=True, null=True)),
                ('manager_comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_evaluations', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managed_evaluations', to=settings.AUTH_USER_MODEL)),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervised_evaluations', to=settings.AUTH_USER_MODEL)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluation.evaluation')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('evaluation', 'employee')},
            },
        ),
        migrations.CreateModel(
            name='TaskList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tasklist', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_lists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['tasklist'],
                'unique_together': {('employee', 'tasklist')},
            },
        ),
        migrations.CreateModel(
            name='TrainingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_topic', models.CharField(max_length=255)),
                ('justification', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_training_requests', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_requests', to=settings.AUTH_USER_MODEL)),
                ('employee_evaluation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='training_request', to='evaluation.employeeevaluation')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comments', models.TextField(blank=True)),
                ('employee_evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_ratings', to='evaluation.employeeevaluation')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluation.tasklist')),
            ],
            options={
                'unique_together': {('employee_evaluation', 'task')},
            },
        ),
    ]
